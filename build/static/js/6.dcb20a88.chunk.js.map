{"version":3,"sources":["pages/LoginPage.js"],"names":["LoginPage","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","in","appear","timeout","classNames","unmountOnExit","className","onSubmit","autoComplete","htmlFor","type","onChange","Component","mapDispatchToProps","authOperations","logIn","connect"],"mappings":"yOAKMA,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,QAAQ,EAAKZ,OAExB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EACqBW,KAAKb,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,gCACG,cAAC,IAAD,CACIY,IAAI,EACJC,QAAQ,EACRC,QAAS,IACTC,WAAW,gBACXC,eAAa,EALjB,SAOI,oBAAIC,UAAU,QAAd,+BAGL,uBACEA,UAAU,OACVC,SAAUP,KAAKL,aACfa,aAAa,MAHf,UAIE,uBACEC,QAAQ,QACRH,UAAU,QAFZ,oBAIE,uBACEA,UAAU,QACVI,KAAK,QACLlB,KAAK,QACLC,MAAOL,EACPuB,SAAUX,KAAKV,eAInB,uBACEmB,QAAQ,WACRH,UAAU,QAFZ,sBAIE,uBACEA,UAAU,QACVI,KAAK,WACLlB,KAAK,WACLC,MAAOJ,EACPsB,SAAUX,KAAKV,eAInB,wBACEgB,UAAU,SACVI,KAAK,SAFP,6B,GA/DcE,aAwElBC,EAAqB,CACzBd,QAASe,IAAeC,OAGXC,sBAAQ,KAAMH,EAAdG,CAAkC9B","file":"static/js/6.dcb20a88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations.js';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n         <CSSTransition\r\n             in={true}\r\n             appear={true}\r\n             timeout={500}\r\n             classNames=\"Title-SlideIn\"\r\n             unmountOnExit\r\n             >\r\n             <h1 className=\"Title\">Enter your data</h1>\r\n         </CSSTransition>\r\n\r\n        <form\r\n          className=\"Form\"\r\n          onSubmit={this.handleSubmit}\r\n          autoComplete=\"off\">\r\n          <label\r\n            htmlFor=\"email\"\r\n            className=\"Label\">\r\n            Email </label>\r\n            <input\r\n              className=\"Input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n         \r\n\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"Label\">\r\n            Password</label>\r\n            <input\r\n              className=\"Input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          \r\n\r\n          <button\r\n            className=\"Button\"\r\n            type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);\r\n\r\n"],"sourceRoot":""}