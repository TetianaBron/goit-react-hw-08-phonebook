{"version":3,"sources":["redux/auth/auth-selectors.js","components/Navigation.js","images/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","components/Spinner/Spinner.js","redux/auth/auth-actions.js","components/Layout/Layout.js","redux/phoneBook/phoneBook-actions.js"],"names":["authSelectors","getIsAuthenticated","state","auth","isAuthenticated","getUsername","user","name","connect","to","exact","className","activeClassName","mapDispatchToProps","onLogout","authOperations","logOut","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","styles","header","display","justifyContent","alignItems","borderBottom","style","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","this","onGetCurrentUser","Layout","fallback","Spinner","path","getCurrentUser","initialState","contacts","createReducer","fetchContactSuccess","_","payload","addContactSuccess","removeContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","removeContactRequest","removeContactError","changeFilter","error","clearError","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","setError","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","document","querySelector","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","registerRequest","post","response","data","message","logIn","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","color","height","timeout","createAction","loginRequest","children"],"mappings":"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","file":"static/js/main.4aba90d0.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\n const authSelectors = {\r\n     getIsAuthenticated,\r\n     getUsername\r\n};\r\n\r\nexport default authSelectors;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst Navigation = ({isAuthenticated}) => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && \r\n    (<NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Phonebook\r\n    </NavLink>\r\n      )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect (mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport './UserMenu.scss';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from '../../images/default-avatar.png';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className=\"MenuContainer\">\r\n    <img src={avatar} alt=\"\" width=\"32\" className=\"MenuAvatar\" />\r\n    <span className=\"MenuName\">Welcome, {name}</span>\r\n    <button className=\"MenuButton\" type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Layout from './components/Layout/Layout';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Spinner from './components/Spinner/Spinner';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst PhoneBookPage = lazy(() => import('./pages/PhoneBookPage'));\n\nclass App extends Component {\n      static propTypes = {\n        onGetCurrentUser: PropTypes.func,\n      };\n    \n    componentDidMount() {\n        this.props.onGetCurrentUser();\n    }\n    render() {\n        return (\n            <Layout>\n                <AppBar />\n\n                <Suspense fallback={<Spinner/>}>\n                    <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/\"\n                        component={HomePage} />\n                    <PublicRoute\n                        path=\"/register\"\n                        redirectTo=\"/contacts\"\n                        restricted\n                        component={RegisterPage} />\n                    <PublicRoute\n                        path=\"/login\"\n                        redirectTo=\"/contacts\"\n                        restricted\n                        component={LoginPage} />\n                    <PrivateRoute\n                        path=\"/contacts\"\n                        component={PhoneBookPage}\n                        redirectTo=\"/login\"\n                    />\n                    </Switch>\n                 </Suspense>\n            </Layout>\n        );\n    };\n};\n\nconst mapDispatchToProps = {\n    onGetCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n    changeFilter,\r\n    clearError\r\n} from './phoneBook-actions'; \r\n\r\nconst initialState = {\r\n        contacts: [],\r\n        filter: '',\r\n        loading: false,\r\n        error: null,\r\n};\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [removeContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [removeContactRequest]: () => true,\r\n    [removeContactSuccess]: () => false,\r\n    [removeContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(initialState.error, {\r\n    [fetchContactError]: (_, { payload }) => payload,\r\n    [addContactError]: (_, { payload }) => payload,\r\n    [removeContactError]: (_, { payload }) => payload,\r\n    [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = {\r\n    name: null,\r\n    email: null\r\n};\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null\r\n});\r\n\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]:() => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; \r\n//import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phoneBook: phoneBookReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport Spinner from './components/Spinner/Spinner';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate\n            loading={<Spinner/>}\n            persistor={store.persistor}>\n             <BrowserRouter>\n                <App />\n            </BrowserRouter>\n    </PersistGate>\n    </Provider>,\n    document.querySelector('#root'),\n);\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credential => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n      const response = await axios.post('/users/signup', credential);\r\n      \r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(authActions.registerError(error.message));\r\n    }  \r\n};\r\n\r\nconst logIn = credential => async dispatch => {\r\n     dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n      const response = await axios.post('/users/login', credential);\r\n      \r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(authActions.loginError(error.message));\r\n    }  \r\n };\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n      await axios.post('/users/logout');\r\n\r\n    \r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n      dispatch(authActions.logoutError(error.message));\r\n    }  \r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const { auth: { token: persistedToken }, } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser\r\n};\r\n\r\nexport default authOperations;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"Loader\">\r\n             <Loader\r\n                 type=\"TailSpin\"\r\n                 color=\"#3f51b5\"\r\n                 height={100}\r\n                 width={100}\r\n                 timeout={300} \r\n                />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n    registerSuccess,\r\n    registerRequest,\r\n    registerError,\r\n    loginSuccess,\r\n    loginRequest,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n};\r\n\r\nexport default authActions;","import React from 'react';\nimport './Layout.scss';\n\nconst Layout = ({ children }) =>\n    <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction('contacts/removeContactRequest');\r\nexport const removeContactSuccess = createAction('contacts/removeContactSuccess');\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const clearError = createAction('contacts/clearError');\r\n\r\n"],"sourceRoot":""}